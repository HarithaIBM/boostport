diff --git a/include/boost/asio/detail/config.hpp b/include/boost/asio/detail/config.hpp
index 076d383b..bfa05c3b 100644
--- a/include/boost/asio/detail/config.hpp
+++ b/include/boost/asio/detail/config.hpp
@@ -2279,4 +2279,10 @@
 # endif // !defined(BOOST_ASIO_DISABLE_SNPRINTF)
 #endif // !defined(BOOST_ASIO_HAS_SNPRINTF)
 
+#ifdef __MVS__
+// same values were used while porting other projects
+#define NI_MAXSERV 32
+#define NI_MAXHOST 1025
+#endif
+
 #endif // BOOST_ASIO_DETAIL_CONFIG_HPP
diff --git a/include/boost/asio/detail/socket_types.hpp b/include/boost/asio/detail/socket_types.hpp
index 7c6f0cd4..1e4bc93d 100644
--- a/include/boost/asio/detail/socket_types.hpp
+++ b/include/boost/asio/detail/socket_types.hpp
@@ -60,7 +60,8 @@
 # if (defined(__MACH__) && defined(__APPLE__)) \
    || defined(__FreeBSD__) || defined(__NetBSD__) \
    || defined(__OpenBSD__) || defined(__linux__) \
-   || defined(__EMSCRIPTEN__)
+   || defined(__EMSCRIPTEN__) || defined(__MVS__)
+   // z/OS has poll.h
 #  include <poll.h>
 # elif !defined(__SYMBIAN32__)
 #  include <sys/poll.h>
diff --git a/include/boost/asio/ip/detail/socket_option.hpp b/include/boost/asio/ip/detail/socket_option.hpp
index 30df18e7..f3682110 100644
--- a/include/boost/asio/ip/detail/socket_option.hpp
+++ b/include/boost/asio/ip/detail/socket_option.hpp
@@ -87,6 +87,10 @@ public:
   {
     return !ipv4_value_;
   }
+  #ifdef __MVS__
+  // z/OS uses AF_INET6
+  #define PF_INET6 AF_INET6
+  #endif
 
   // Get the level of the socket option.
   template <typename Protocol>
diff --git a/include/boost/asio/ip/unicast.hpp b/include/boost/asio/ip/unicast.hpp
index ad6af378..87c69f52 100644
--- a/include/boost/asio/ip/unicast.hpp
+++ b/include/boost/asio/ip/unicast.hpp
@@ -20,6 +20,10 @@
 #include <boost/asio/ip/detail/socket_option.hpp>
 
 #include <boost/asio/detail/push_options.hpp>
+#ifdef __MVS__
+// need this in order to have IP_TTL (for z/OS 2.5 and below)
+#include <xti.h>
+#endif
 
 namespace boost {
 namespace asio {
diff --git a/include/boost/asio/signal_set_base.hpp b/include/boost/asio/signal_set_base.hpp
index 29161ade..96bd8cbd 100644
--- a/include/boost/asio/signal_set_base.hpp
+++ b/include/boost/asio/signal_set_base.hpp
@@ -61,9 +61,18 @@ public:
   enum class flags : int
   {
     none = 0,
+#ifndef __MVS__
     restart = BOOST_ASIO_OS_DEF(SA_RESTART),
     no_child_stop = BOOST_ASIO_OS_DEF(SA_NOCLDSTOP),
     no_child_wait = BOOST_ASIO_OS_DEF(SA_NOCLDWAIT),
+#else
+    // z/OS's SA_NOCLDSTOP is 0x80000000 that can't be contained
+    // in an int, so shift-right 8 bits, it's OK because it's just
+    // an enum
+    restart = BOOST_ASIO_OS_DEF(SA_RESTART) >> 8,
+    no_child_stop = BOOST_ASIO_OS_DEF(SA_NOCLDSTOP) >> 8,
+    no_child_wait = BOOST_ASIO_OS_DEF(SA_NOCLDWAIT) >> 8,
+#endif
     dont_care = -1
   };
 
